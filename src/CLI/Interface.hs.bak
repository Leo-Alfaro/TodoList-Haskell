module CLI.Interface (application) where

import CLI.Common (getOption, invalidOption, parseError)
import CLI.DeadlineMenu (deadlineMenu)
import CLI.ManageMenu (manageTasksMenu)
import System.Exit (exitSuccess)
import Types

mainHelp :: String
mainHelp = "1 - Gerenciar tarefas\n2 - Prazos\n3 - Filtros\n4 - RelatÃ³rios\n5 - Salvar/Carregar\n0 - Sair"

mainMenu :: Maybe Int -> [Task] -> IO [Task]
mainMenu Nothing tasks = putStrLn parseError >> return tasks
mainMenu (Just option) tasks = _cliOptions option tasks
  where
    _cliOptions 0 = (>>) exitSuccess . return
    _cliOptions 1 = manageTasksMenu
    _cliOptions 2 = deadlineMenu
    _cliOptions _ = (>>) (putStrLn invalidOption) . return

application :: IO [Task] -> IO [Task]
application ioTasks = do
  tasks <- ioTasks
  putStrLn mainHelp
  input <- getOption
  new_tasks <- mainMenu input tasks
  application (return new_tasks)
